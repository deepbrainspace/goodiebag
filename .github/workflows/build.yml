name: ⚙️ Build

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number'
        required: true
        type: string
      head_ref:
        description: 'Head branch reference'
        required: true
        type: string
      head_sha:
        description: 'Head commit SHA'
        required: true
        type: string
      base_ref:
        description: 'Base branch reference'
        required: true
        type: string

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Initialize build pipeline check
  start-check:
    name: 🏗️ Initialize Build Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Create CI build check
        run: |
          gh api repos/${{ github.repository }}/check-runs \
            --method POST \
            --field name="✅ CI Build" \
            --field head_sha=${{ inputs.head_sha }} \
            --field status="in_progress" \
            --field details_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --field summary="Building affected packages and running tests" \
            --field text="View detailed build logs and individual job status"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Phase 1: Detection
  detect-affected:
    name: 🔍 Detect Affected Packages
    needs: start-check
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.detect.outputs.packages }}
      has-packages: ${{ steps.detect.outputs.has-packages }}
      package-count: ${{ steps.detect.outputs.package-count }}
      package-groups: ${{ steps.detect.outputs.package-groups }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace

      - name: Detect affected packages
        id: detect
        uses: ./.github/actions/detect-affected

  # Phase 2: Validation (Parallel per Package)
  lint:
    name: 🔍 Lint (${{ matrix.package }})
    needs: detect-affected
    if: needs.detect-affected.outputs.has-packages == 'true'
    strategy:
      matrix:
        package: ${{ fromJSON(needs.detect-affected.outputs.packages) }}
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          package-group: ${{ fromJSON(needs.detect-affected.outputs.package-groups)[matrix.package] }}
          package-name: ${{ matrix.package }}

      - name: Run lint for ${{ matrix.package }}
        run: |
          echo "🔍 Linting ${{ matrix.package }}..."
          nx lint ${{ matrix.package }}

  test:
    name: 🧪 Test (${{ matrix.package }})
    needs: detect-affected
    if: needs.detect-affected.outputs.has-packages == 'true'
    strategy:
      matrix:
        package: ${{ fromJSON(needs.detect-affected.outputs.packages) }}
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          package-group: ${{ fromJSON(needs.detect-affected.outputs.package-groups)[matrix.package] }}
          package-name: ${{ matrix.package }}

      - name: Run tests for ${{ matrix.package }}
        run: |
          echo "🧪 Testing ${{ matrix.package }}..."
          nx test ${{ matrix.package }}

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.package }}
          path: coverage/
          retention-days: 1

  # Phase 3: Build (Parallel per Package)
  build:
    name: 🏗️ Build (${{ matrix.package }})
    needs: [detect-affected, lint, test]
    if: needs.detect-affected.outputs.has-packages == 'true'
    strategy:
      matrix:
        package: ${{ fromJSON(needs.detect-affected.outputs.packages) }}
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          package-group: ${{ fromJSON(needs.detect-affected.outputs.package-groups)[matrix.package] }}
          package-name: ${{ matrix.package }}

      - name: Build ${{ matrix.package }}
        run: |
          echo "🏗️ Building ${{ matrix.package }}..."
          nx build ${{ matrix.package }}

      - name: Upload build artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.package }}
          path: dist/packages/${{ matrix.package }}
          retention-days: 1

  # Summary and final check update
  summary:
    name: ✅ Build Status
    needs: [start-check, detect-affected, lint, test, build]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Check build status and update final check
        run: |
          # Determine overall result
          if [[ "${{ needs.detect-affected.result }}" == "success" && 
                ("${{ needs.lint.result }}" == "success" || "${{ needs.lint.result }}" == "skipped") && 
                ("${{ needs.test.result }}" == "success" || "${{ needs.test.result }}" == "skipped") && 
                ("${{ needs.build.result }}" == "success" || "${{ needs.build.result }}" == "skipped") ]]; then
            conclusion="success"
            echo "✅ Build pipeline completed successfully"
          else
            conclusion="failure" 
            echo "❌ Build pipeline failed"
          fi

          # Update the check run
          gh api repos/${{ github.repository }}/check-runs \
            --method POST \
            --field name="✅ CI Build" \
            --field head_sha=${{ inputs.head_sha }} \
            --field status="completed" \
            --field conclusion="$conclusion" \
            --field details_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --field summary="CI build completed with $conclusion" \
            --field text="Click to view detailed build logs, test results, and individual job status"

          if [[ "${{ needs.detect-affected.outputs.has-packages }}" == "true" ]]; then
            echo "📦 Packages: ${{ needs.detect-affected.outputs.packages }}"
          else
            echo "ℹ️ No affected packages found - documentation or config changes only"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
