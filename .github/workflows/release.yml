name: üöÄ Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: false
        type: choice
        default: ''
        options:
          - ''
          - patch
          - minor
          - major

jobs:
  detect:
    name: Detect
    runs-on: ubuntu-latest
    outputs:
      has-packages: ${{ steps.detect.outputs.has-packages }}
      packages: ${{ steps.detect.outputs.packages }}
      package-count: ${{ steps.detect.outputs.package-count }}
      package-groups: ${{ steps.detect.outputs.package-groups }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace

      - name: Detect affected packages
        id: detect
        uses: ./.github/actions/detect-affected

  build:
    name: Build ${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: detect
    if: needs.detect.outputs.has-packages == 'true'
    
    strategy:
      matrix:
        package: ${{ fromJson(needs.detect.outputs.packages) }}
        include: ${{ fromJson(needs.detect.outputs.package-groups) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          package-group: ${{ matrix.package-group }}
          package-name: ${{ matrix.package }}

      - name: Build package
        run: nx build ${{ matrix.package }}

  release:
    name: Release ${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: [detect, build]
    if: needs.detect.outputs.has-packages == 'true'
    
    strategy:
      matrix:
        package: ${{ fromJson(needs.detect.outputs.packages) }}
        include: ${{ fromJson(needs.detect.outputs.package-groups) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup workspace
        uses: ./.github/actions/setup-workspace
        with:
          package-group: ${{ matrix.package-group }}
          package-name: ${{ matrix.package }}

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Release package
        run: |
          echo "üöÄ Releasing ${{ matrix.package }}..."
          
          # Build release command
          VERSION_INPUT="${{ github.event.inputs.version }}"
          if [ -z "$VERSION_INPUT" ]; then
            echo "üìã Using automatic version determination from conventional commits"
            VERSION_CMD="nx release --projects=${{ matrix.package }}"
          else
            echo "üìã Using manual version bump: $VERSION_INPUT"
            VERSION_CMD="nx release $VERSION_INPUT --projects=${{ matrix.package }}"
          fi

          echo "üéØ Executing: $VERSION_CMD"
          $VERSION_CMD
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  no-packages:
    name: No packages to release
    runs-on: ubuntu-latest
    needs: detect
    if: needs.detect.outputs.has-packages == 'false'

    steps:
      - name: No packages affected
        run: |
          echo "‚ÑπÔ∏è No packages with publish targets were affected by recent changes."
          echo "The changes appear to be documentation, configuration, or non-publishable code."
