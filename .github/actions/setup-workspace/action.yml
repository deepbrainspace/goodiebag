name: 'Setup Workspace'
description: 'Checkout repository, setup Node.js, pnpm, install dependencies, and configure NX'

inputs:
  node-version:
    description: 'Node.js version to use'
    default: '20'
  pnpm-version:
    description: 'pnpm version to use'
    default: '10.12.3'
  fetch-depth:
    description: 'Git fetch depth for checkout'
    default: '0'
  token:
    description: 'GitHub token for checkout'
    default: ${{ github.token }}
  package-group:
    description: 'Package group for the current package being built'
    default: ''
  package-name:
    description: 'Name of the current package being built'
    default: ''

runs:
  using: 'composite'
  steps:
    # Split caches for better granularity and space efficiency
    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          pnpm-store-${{ runner.os }}-

    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: node-modules-${{ runner.os }}-node${{ inputs.node-version }}-${{ hashFiles('**/pnpm-lock.yaml', 'package.json') }}
        restore-keys: |
          node-modules-${{ runner.os }}-node${{ inputs.node-version }}-

    # NX Cloud distributed cache is used instead of local cache

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.pnpm-version }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'pnpm'

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Add node_modules/.bin to PATH
      shell: bash
      run: echo "${GITHUB_WORKSPACE}/node_modules/.bin" >> $GITHUB_PATH

    - name: Set SHAs for NX
      uses: nrwl/nx-set-shas@v4.3.0
      with:
        main-branch-name: 'main'

    - name: Setup Rust caching
      if: inputs.package-group == 'rust-packages'
      uses: ./.github/actions/setup-rust-cache
      with:
        package-name: ${{ inputs.package-name }}
